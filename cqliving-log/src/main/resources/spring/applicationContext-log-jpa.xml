<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>JPA配置</description>

	<!-- JPA-DAO 默认扫描配置，如果是基于com.CQLIVING.edu.common的项目或组件不用在声明DAO的扫描 -->
	<jpa:repositories base-package="com.cqliving.log" transaction-manager-ref="logTransactionManager" entity-manager-factory-ref="logEntityManagerFactory" factory-class="com.cqliving.framework.common.dao.jpa.EntityRepositoryFactoryBean" />
	

	<!-- Jpa Entity Manager 配置 -->
	<bean id="logEntityManagerFactory" class="com.cqliving.framework.common.dao.jpa.FrameworkEntityManagerFactoryBean">
		<property name="dataSource" ref="logDataSource" />
		<property name="jpaVendorAdapter" ref="logHibernateJpaVendorAdapter" />
		<property name="packagesToScan">
			<array>
				<value>com.cqliving.log</value>
			</array>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>
				<prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
			</props>
		</property>
	</bean>
	<!-- 
	<bean id="logHibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="com.cqliving.framework.common.dao.support.Hibernates">
				<constructor-arg ref="logDataSource" />
			</bean>
		</property>
	</bean>
	 -->
	<bean id="logHibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" 
			value="org.hibernate.dialect.MySQL5InnoDBDialect" />
	</bean>

	<bean id="logPagedJdbcTemplate" class="com.cqliving.framework.common.dao.jdbc.PagedJdbcTemplate">
		<property name="dataSource" ref="logDataSource" />
	</bean>

	<!-- AOP 声明式事务配置 -->
	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="logTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="logEntityManagerFactory" />
	</bean>
	<!-- 支持annotation声明事务 -->
	<tx:annotation-driven transaction-manager="logTransactionManager" proxy-target-class="true" />

	<!-- 以AspectJ方式 定义 AOP ,对指定包路径的业务服务的实现类进行拦截     -->
	<!--<aop:config proxy-target-class="true">
	    <aop:advisor pointcut="execution(* com.cqliving.edu.log..*ServiceImpl.*(..))" advice-ref="logTxAdvice" />
	</aop:config>-->
	<!-- 基本事务定义,使用transactionManager作事务管理,默认get*方法的事务为readonly,其余方法按默认设置. 默认的设置请参考Spring文档事务一章. -->
	<!--<tx:advice id="logTxAdvice" transaction-manager="logTransactionManager">
	    <tx:attributes>
	        <tx:method name="get*" read-only="true" />
	        <tx:method name="find*" read-only="true"/>
	        <tx:method name="query*" read-only="true"/>
	        <tx:method name="show*" read-only="true"/>
	        <tx:method name="list*" read-only="true"/>
	        <tx:method name="*" propagation="REQUIRED" rollback-for="com.cqliving.framework.common.exception.BusinessException" />
	    </tx:attributes>
	</tx:advice>-->
</beans>